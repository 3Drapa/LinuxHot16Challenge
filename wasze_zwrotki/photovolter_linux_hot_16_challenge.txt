# LinuxHot16Challange


# Witajcie, 

# W tym konkursie pokazujemy wszystkim, że Linux jest prosty fajny i przyjemny.
# Wybieramy 32 (wg. was najważniejsze) komendy do Linuxa Ubuntu (18/20).
# Do każdej komenty dodajemy 1 linijkowy opis. Może być na wesoło.
 
# Ze wszystkich list wyliczymy listę top 16 i top 32.

# Udział może brać każdy, początkujący i doświadczeni. Jeżeli wolisz poczekać na rezultat, 
# to wejdź tutaj 1 Lutego.

# Powodzenia! I pamiętaj, że robimy to aby przybliżyć ludziom Linuxa jako przyjazny system, więc zastanów się nad tym jak to dobrze opisać.

# Pamiętaj o zwięzłości i czytelności. Te pliki będą zczytywane automatycznie, więc wyjście poza format sprawi, że Twoja propozycja nie zostanie uwzględniona:
# 1. cd <folder:/var>
# Teleportuje Cię do folderu /var.

# 2. cd 
# Teleportuje Cię do folderu glównego.

# jak wpisujesz nazwę własną to pisz <co:przyklad> np. 
# ssh -i <klucz:klucz.pem> <login:ubuntu>@<ip:1.1.1.1>

# EDYTUJ PONIŻSZE LINIE:
# O pliki będę pytał na zajęciach w ŚRODĘ o 19:00 ale możecie po prostu to wrzucać wszędzie aby popularyzować Linuxa.

# UWAGA: WAŻNE JEST TRZYMANIE FORMATU.

W kodzie, jak i w plikach z danymi w programowaniu utrzymujemy porządek. Trzymanie się określonych formatów i standardów sprawia, że można przetwarzać dane z bardzo wiele plików jednocześnie w krótkim czasie. Różne rodzaje formatów wymagały by większego skomplikowania kodu, przewidzenia w jakie sposoby można podejść do rozwiązania problemu. Tu jednak chcemy aby nasze rozwiązania zostały przeczytane przez wszystkich. Dlatego proszę, z wisienką na czubeczku: trzymaj się formatu:

HOT 16

# 1. komenda
# Opis...

# 2. ... 
# ... 

# 3. ...
# ...

...sh

A jeżeli chcesz napisać po swojemu - to super (jak np:)
https://github.com/rafaldinho19/Komendy-linux/

ale wtedy napisz to jako drugi plik i nazwij go:
LinuxHot16ChallangeFreestyle.txt





# AUTOR: Photo Volter

# HOT 16

# 1. whoami
# Odpowiada na pytanie "Who am I? / Kim jestem?" - pokazuje nazwę użytkownika.

# 2. cp -ui <plik:plik_oryginalny.txt> <plik:kopia_pliku.txt>
# Kopiuje plik. Opcja '-u' kopiuje plik oryginalny tylko wtedy, gdy jest nowszy niż docelowy plik, opcja '-i' zapyta cię, czy nadpisać plik docelowy, gdy taki istnieje.

# 3. ls -A
# Wypisuje listę wszystkich plików z bieżącego katalogu; również tych, które próbują się ukryć przed zwykłym `ls`.

# 4. cd
# 'chcę do' Przenosi cię do katalogu domowego; nawet wtedy, gdy nie pamiętasz jego nazwy. Gdy pamiętasz nazwę ("ścieżkę dostępu"), to przenosi cię do katalogu o tej nazwie.

# 5. cd ..
# Przenosi cię z bieżącego podkatalogu wyżej czyli do katalogu zawierającego podkatalog, w którym teraz jesteś.

# 6. mc 
# Potężne narzędzie, które skromnie przedstawia się jako menedżer plików, ale z plikami potrafi zrobić o wiele więcej, niż sobie wyobrażasz. Jak gejsza z wachlarzem. Wypróbuj `mcedit` 

# 7. vim
# Potężny edytor plików. Gdy go nie znasz, jest jak labirynt: 'vim jak wejść, ale nie vim jak z niego wyjść i się :wq xD'.

# 8. pwd
# 'Pokaż wujkowi drogę' - wypisuje ścieżkę dostępu do bieżącego katalogu.

# 9. head
# Wypisuje zawartość początkowych linii pliku. 

# 10. df -h
# Wypisuje ilość wolnego miejsca na dysku w jednostkach czytelnych dla człowieka. 

# 11. mv 
# 

# 12. rm
# 

# 13. touch <plik:aktualizowany_lub_nieistniejacy_plik.txt> <plik:mozna_podac_wiecej_niz_jeden_plik.txt>
# Ustawia czas modyfikacji i dostępu do pliku na bieżący czas. Gdy plik nie istnieje - tworzy go.

# 14. mkdir -p <katalog:./nazwa_katalogu>
# Tworzy katalog 'nazwa_katalogu' w bieżącym katalogu lub w podanej ścieżce dostępu. Przełącznik '-p' tworzy brakujące katalogi nadrzędne, jeżeli wcześniej nie istniały. 

# 15. ssh
# 

# 16. file
# 



# HOT 32

# 17. tail
# 

# 18. pip3
# 

# 19. python3
# 

# 20. grep
# 

# 21. htop
# 

# 22. vdir
# 

# 23. uniq
# 

# 24. groups
# 

# 25. sleep
# 

# 26. env
# Wypisuje i/lub zmienia zmienne środowiska.

# 27. uname -a
# 

# 28. sed
# 

# 29. who lub pinky (lepsze)
# Odpowiada na pytanie, kto jest zalogowany na serwerze - podaje loginy zalogowanych użytkowników.

# 30 echo <string:"jakiś tekst lub wartość">
# Odpowiednik Python'owego 'print()' - wypisuje na wyjście jakiś tekst lub wartość zmiennej 

# 31. nl
# 

# 32. wc
# 

#### ZPXD:
# Darmowe roczne zajęcia z programowania. Zapraszajcie:
# https://zajecia-programowania-xd.pl/szturm_na_aws
# https://www.facebook.com/Szturm-na-AWS-109216351659123
# https://discord.gg/46JVvHgzqz
